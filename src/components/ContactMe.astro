---
import InputText from "./InputText.astro";
import Textarea from "./Textarea.astro";
import { Icon } from "astro-icon";
import type { BaseProps } from "./typings";

import translations from "src/data/translations/contactMe";

export type Props = BaseProps;
const { language } = Astro.props;
const contactMeLinks = [
  {
    href: "https://github.com/gamino97",
    icon: "simple-icons:github",
    name: "Github",
  },
  {
    href: "https://www.linkedin.com/in/carlos-alfredo-gamino-aparicio-86717a273",
    icon: "simple-icons:linkedin",
    name: "LinkedIn",
  },
];
---

<section class="container" id="contact-me">
  <h2>{translations.title[language]}</h2>
  <div class="contact-wrapper">
    <ul class="contact-links-wrapper">
      {
        contactMeLinks.map((link) => (
          <li class="contact-link">
            <a href={link.href} class="icon-link">
              <Icon name={link.icon} width={256} />
              <span class="sr-only">{link.name}</span>
            </a>
          </li>
        ))
      }
    </ul>
    <form>
      <InputText
        placeholder={translations.nameInput[language]}
        label={translations.nameInput[language]}
        name="name"
      />
      <InputText
        placeholder={translations.emailInput[language]}
        label={translations.emailInput[language]}
        name="email"
        type="email"
      />
      <Textarea label={translations.messageInput[language]} name="message" />
      <div class="form-action">
        <button class="btn btn-primary">
          {translations.submitButton[language]}
        </button>
      </div>
    </form>
  </div>
</section>

<style>
  .contact-links-wrapper {
    display: grid;
    grid-template-columns: 1fr 1fr;
    grid-template-rows: 1fr 1fr;
    gap: var(--size-fluid-1);
    justify-content: space-around;
  }

  section {
    text-align: center;
  }

  .contact-wrapper {
    display: flex;
    flex-direction: column;
  }

  form {
    display: flex;
    flex-direction: column;
    gap: var(--size-3);
  }

  button {
    text-transform: uppercase;
  }

  .form-action {
    display: flex;
    justify-content: flex-end;
  }

  .contact-link {
    display: flex;
    justify-content: center;
    align-items: center;
  }

  .contact-link:nth-child(2) {
    grid-column-start: 2;
    grid-row-start: 2;
  }

  .icon-link {
    background-color: hsl(var(--accent2) / 70%);
    border-radius: var(--radius-2);
    aspect-ratio: 1/1;
    height: var(--size-fluid-6);
    display: inline-block;
  }

  .icon-link:hover {
    background-color: hsl(var(--accent2) / 100%);
  }

  [astro-icon] {
    margin: auto;
    padding: var(--size-1);
    mask-composite: exclude;
    color: hsl(var(--bkg));
  }

  @media (min-width: 768px) {
    .contact-wrapper {
      flex-direction: row;
    }

    .contact-links-wrapper {
      width: 50%;
      display: inline-grid;
      grid-template-columns: 1fr 1fr;
    }

    form {
      width: 50%;
    }

    .icon-link {
      height: var(--size-fluid-7);
    }
  }
</style>
