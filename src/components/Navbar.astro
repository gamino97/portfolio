---
import { Icon } from "astro-icon/components";
import navLinks from "src/data/navbar";
import { getLangFromUrl, useTranslations } from 'src/i18n/utils';
import LanguageSelector from "src/components/LanguageSelector.astro";

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);
---

<nav>
  <div class="container nav-container">
    <a href="/">
      <Icon name="logo" width={25} height={25} class="logo" />
      <span class="sr-only">{t('nav.linkMain')}</span>
    </a>
    <div class="nav-wrapper">
      <LanguageSelector />
      <button
        class="btn btn-menu"
        id="menu-btn"
        aria-expanded="false"
        aria-label={t('nav.buttonArial')}
      >
        <Icon name="feather:menu" width={25} height={25} />
      </button>
      <ul role="navigation">
        {
          navLinks.map((link) => (
            <li role="none">
              <a href={link.url} class={`btn btn-${link.style} nav-link`}>
                {t(link.name)}
              </a>
            </li>
          ))
        }
      </ul>
    </div>
  </div>
</nav>

<script>
  const navBtn = document.querySelector<HTMLButtonElement>("#menu-btn")!;
  navBtn.addEventListener("click", () => {
    navBtn.setAttribute(
      "aria-expanded",
      navBtn.getAttribute("aria-expanded") === "false" ? "true" : "false",
    );
  });
  const navLinks = document.querySelectorAll<HTMLAnchorElement>(".nav-link");
  navLinks.forEach((navLink) => {
    navLink.addEventListener("click", () => {
      navBtn.setAttribute("aria-expanded", "false");
    });
  });
</script>

<style>
  nav {
    position: fixed;
    width: 100%;
    z-index: var(--layer-5);
  }

  .nav-container {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: var(--size-fluid-2);
    background-color: hsl(var(--bkg));
  }

  .logo {
    height: calc(var(--size-fluid-4) * 0.8);
    width: auto;
  }

  ul,
  .nav-wrapper {
    display: flex;
    align-items: center;
    gap: var(--size-3);
  }

  ul {
    flex-direction: column;
    transform: translateY(-200%);
    position: absolute;
    background-color: hsl(var(--bkg));
    top: var(--size-fluid-5);
    left: 0;
    right: 0;
    text-align: center;
    border-bottom: initial;
    transition:
      transform 0.4s,
      border-bottom 0s;
    padding: var(--size-3);
    z-index: -1;
  }

  .btn-menu {
    background-color: transparent;
    border: none;
    display: grid;
    place-items: center;
    padding-inline: var(--size-2);
    transition: transform 0.5s;
  }

  .btn-menu[aria-expanded="true"] + ul {
    transform: translateY(0);
    border-bottom: 2px solid hsl(var(--muted));
    transition:
      transform 0.4s,
      border-bottom 0.1s ease 0.4s;
  }

  .btn-menu[aria-expanded="true"] {
    transform: rotate(180deg);
  }

  li[role="none"],
  .nav-link {
    width: 100%;
    display: block;
  }

  @media (min-width: 900px) {
    .nav-wrapper {
      gap: var(--size-4);
    }

    .btn-menu {
      display: none;
    }

    ul {
      flex-direction: row;
      position: static;
      transform: translateY(0);
      border-bottom: initial;
      padding: 0;
      inset: initial;
      background-color: transparent;
      z-index: initial;
    }

    .btn-menu[aria-expanded="true"] + ul {
      border-bottom: initial;
    }

    li[role="none"],
    .nav-link {
      width: initial;
    }

    .nav-container {
      background-color: transparent;
      backdrop-filter: blur(5px);
    }
  }
</style>
